数组：就是一组数据，一组有序的数组，一组具有任何数据类型的数组，但是我们是不建议这样定义数组。


数组的倒序取值，取值就是从数组从后往前取。
for(var i<array.length-1; 1>=0;i--){
	console.log(array.[i]);
}
 

两种方法来输出奇数并把它插进数组中；
1.
var array = [];
var j=0;
for(i=1;i<=100;i++){
	if(i % 2 !== 0){
	array[j]=i;
	j++;
}
}
2.
var array = [];
for(i=1 ; i<=100; i++){
	if(i%2!==0){
	array[array.length]=i
}
对于第二种的方法的解释，当把i插入数组中时，因为我们首先创建了一个个空的数组，因为创建的是空的数组，所以数组的初始长度为0.所以array[array.length]
中array.length中的长度会依次根据数组新增的数据项导致长度改变而改变




求一组数组的最大值和最小值，并求出其索引值。
 var array = ["4","6","8","2"];
var max = array[0];
var maxIndex = 0;
var min = array[0];
var minIndex = 0;
for(i=1;i<=array.length ; i++){
	if(max < array[i]){
	max = array[i];
	maxIndex = i
}
	if(min > array[i]){
	min = array[i];
	minIndex = i;
}	   
}
console.log(max);
console.log(maxIndex);
console.log(min);
console.log(minIndex);
对上面代码的解析：
首先我们先定义了一个数组，然后我们首先假设数组其最大值为max，并用变量将其保存，然后最大值的索引值也是一样的，假设其最大值索引值为第一个数据项的，简单说就是变量的初始化。然后我们循环数组，首先我们定义变量的时候就将数组的第一项给了max变量，所以，我们从性能的要求上来说，循环的时候，循环初始值就没必要是0了，当然也不是不可以，但是这是为了性能要求上来说的。然后就是比较，如果我们定义的变量值小于后面数组的数据项的话，则将大于定义变量值的数据项赋值到max中，将max输出，而其所在的位置也是如此这样的判断，因为循环到最大值的时候，其array[i]已经传过来了，所以只要将它输出就好。最小值的求法和最小值的索引也是这样求得。只是判断条件的不同而已。


如何将数组中的数据项用特定的字符串输出，因为数组的默认状态使用“ ， ”显示的，但是当我们有特殊的要求时。例如aaa|bbb|ccc这样。
var array  = ["aaa","bbb","ccc"]；
 var str = array[0];将数组的第一项用一个变量存储起来，是为了输出的时候不会多出一个我们要特定的字符串
 var ssperator = "|";用变量将其存储起来，有利于后面的更改。
 for(var i =1 ;i<array.length; i++){
	str += seperator + array[i]
} 
console.log(str);
这样的解决方式就完美的解决了字符串的输出问题，当然我们也是利用数组的方法join（“|”）来为数组输出添加特定的输出形式，join（）方法重现了tostring()方法



要求去除数组中0项的数。
var aray = [1,2,0,0,4,6,2,7];
for(i=0; i<array.length ; i++){
	if(array[i] ! == 0){
	newArray[newArray.length] = array[i];
	}
}
其中


翻转数组，将数组[1,2,3]输出为[3,2,1]
var array = [1,2,3];
var newArray = [];
for(var i = array.length-1; i>=0;i--){
	newarry[i]=array[i];	
}