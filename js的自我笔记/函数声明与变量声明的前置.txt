例子：
	alert(x);

	var x = 10;
	alert(x);
	x=20;//r如果未使用var定义的时候，那么默认是全局的

	function x(){}
	alert(x);

	if(true){
		var a = 1;//注意的是JavaScript是没有块级作用域的概念
	}else{
		var b = true;
	}

	alert(a);
	alert(b);


	以下是对代码的解析：
		首先，首先，这是个全局作用域，所以在VO中，我们首先执行的是函数声明(就是将函数前置解析，需要注意的是，如果函数有同名函数，那么函数是覆盖的，以为JavaScript中是没有重载的概念的)，然后在是变量声明(也是变量前置解析，如果变量为undefined的话，那么解析的时候是会忽略的)。
		所以，第一步就是：
		将函数声明提前：
		function x
		再将变量声明提前：
		var x 
		x
		var a
		var b

		所以，alert(x);的结果是一个函数function x()
		那么第二步就是 var x =10;这是进行赋值语句，所以就是将10赋给x
		第三部就是alert（x）;因为赋值成功，所以x 为10
		第四部就是: 将20 赋给x, 因为这是值引用，所以，改变了x的值
		第四部就是：function x (){};因为有对他的声明，而与没有调用，所以解析的时候会忽略他
		第五步就是：alert(x);因为前期将x =20 赋给了x 所以值为20
		第六步：
		if(true){
			var a =1;
		}else{
			var b = true;
		}
		因为是正确 的，所以执行var a - 1;所以，将1赋给了a
		alert(a);//将1赋给了a
		alert(b)、//因为var b = true;未执行，所以b是undefined的，是因为变量声明前置的影响
