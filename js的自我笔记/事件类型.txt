事件是分多种类型的：
	1.UI事件，当用户与页面上的元素发生交互是触发：但是有可能指的是那些不一定与用户操作的有关事件。
		1.load事件：当页面完全加载后在window上触发，当所有框架都加载完毕时在框架集上面触发，当图形加载完毕时在<img>元素触发，或者嵌入的内容加载完毕时在<object>元素上触发。
		2.unload事件:当页面完全卸载再window上面触发，当所有的框架都卸载后在框架集删上触发，或者当嵌入的内容卸载完毕再<object>元素上面触发。
		3.abort事件：在用户停止下载的过程是时，如果嵌入的内容没有加载完，则在<object>元素上触发。
		4.error事件:当发生在JavaScript错误时在window上触发，当图形加载完毕时在<img>元素触发，或者嵌入的内容加载完毕时在<object>元素上触发。
		5.select:当用户选择文本框(<input>huo<texterea>)中的一个或多个字符触发
		6.resize事件：当窗口或框架的大小变化时在window或框架上触发
		7.scroll事件：当用户滚动带滚动条的元素中的内容使时，在该元素上面触发，<body>元素上面中包含所加载页面的滚动条

	2.焦点事件，当元素获得或失去焦点时触发：
		1.blur事件：在元素失去焦点时触发，这个事件是不会冒泡的，并且所有的浏览器都支持他。
		2.DOMFocusIn:在元素获得焦点时触发，这个事件与HTML中focus事件等价，但是它是冒泡的，只有opera支持这个事件。
		3.DOMFocusOut：在元素失去焦点的时候触发，同上。
		4.focus事件：咋元素获得焦点时触发，这个事件是不会冒泡的，所有的浏览器都支持：
		5.focusin：在元素获得焦点时触发，这个事件与HTML事件的focus等价，但是它支持冒泡，支持这个事件的浏览器有IE5.5+，Safari 5.1+ opera5.1+和chrome
		6.focusout：在元素失去焦点时触发，这个事件与HTML事件的blur通用版本，但是它支持冒泡，支持这个事件的浏览器有IE5.5+，Safari 5.1+ opera5.1+和chrome
	3.鼠标事件，当用户通过鼠标在页面上执行操作是触发：
		1.click事件：当用户单击主鼠标按钮(一般为左边的按钮)或者按下回车键触发时，这一点确保了易访问性很重要，意味着onclick事件处理既可以通过键盘以可以通过鼠标
		2.dbclick事件：在用户双击主鼠标(一般为左边的按钮)时触发，
		3.mousedown事件：当用户按下任意的鼠标按钮时触发，不能通过键盘触发这个事件。
		4.mouseenter事件：在鼠标光标从元素外部首次移动到元素范围之内的事件时触发，这个事件时不冒泡的，而且鼠标移动到后代元素上是不触发的
		5.mouseleave事件：在位于元素上方鼠标光标移动到元素范围之外是触发的，这个是不冒泡的。而且鼠标移动到后代元素上是不会触发的。
		6.mousemove事件：当鼠标指针在元素内部移动时重复的触发。
		7.mouseout事件：当鼠标指针位于一个元素的上方时，然后用户将其移动到另一个元素时触发。
		8.mouseover事件：当鼠标指针位于一个元素外部，然后用户将其首次移入另一个元素边界之内触发，
		9.mouseup事件：当用户释放鼠标按钮时触发。
	4.滚轮事件，当使用鼠标滚轮是触发：
	5.文本事件，当在文档中输入文本是触发：
	6.键盘事件，当用户通过键盘在页面上执行操作是触发：
		1.keydown事件：当用户按下键盘任意键时触发，如果按住不放，会重复触发此事件。
		2.keypress事件：当用户按下键盘上的字符键时触发，而且如果按住不放的话，会重复触发此事件。
		3.keyup事件：当用户释放键盘上的键时触发。

		虽然所有的元素都支持以上三个事件，但只有在用户通过文本框输入文本时才最常用到
	7.合成事件，当为IME（输入法编辑器）输入字符时触发：
	8.变动事件，当底层DOM结构发生变化是触发：

	